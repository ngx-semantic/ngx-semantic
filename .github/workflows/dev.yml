name: Development

on:
  push:
    branches: [ "dev" ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: Setup Yarn
        run: npm install -g yarn
      - name: Setup Angular
        run: yarn global add @angular/cli@latest
      - name: Install Dependencies
        run: yarn install
      - name: Tag Version
        run: |
          cd src
          NEW_VERSION=$(npm version prerelease --preid=beta)
          git config --local user.email "indexz3ro@aol.com"
          git config --local user.name "CI"
          git commit -a -m "ci: version pre-release"
          git tag $NEW_VERSION
      - name: Push Tags to GitHub
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      - name: Build
        run: yarn run build:prod
      - name: Publish Lib
        run: npm publish ./dist --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          prerelease: true
          makeLatest: "latest"
          generateReleaseNotes: true
#        uses: actions/github-script@v6
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            try {
#              const tags_url = context.payload.repository.tags_url + "?per_page=1"
#              const result = await github.request(tags_url)
#              const current_tag = result.data[0].name
#              await github.rest.repos.createRelease({
#                draft: false,
#                generate_release_notes: true,
#                name: current_tag,
#                owner: context.repo.owner,
#                prerelease: true,
#                repo: context.repo.repo,
#                tag_name: current_tag,
#              });
#            } catch (error) {
#              core.setFailed(error.message);
#            }
